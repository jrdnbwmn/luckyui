<% content_for :title, "Dropdown - Lucky  UI" %>

<div class="flex flex-col mb-8">
    <span class="text-sm mb-2 text-zinc-500">Controls</span>
    <h1 class="text-4xl font-bold mb-4 text-zinc-900">Dropdown</h1>
    <p>Tabs organize and allow navigation between groups of content that are related and at the same level of hierarchy.</p>
    <p>Bottom left is default.</p>
</div>

<div class="mt-16">
    <div class="flex justify-center gap-4">

        <div x-data="{
            open: false,
            toggle() {
                if (this.open) {
                return this.close()
                }
                this.$refs.button.focus()
                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return
                this.open = false
                focusAfter && focusAfter.focus()
            }
            }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="! $refs.panel.contains($event.target) && close()" x-id="['dropdown-button-right']" class="relative">
            <!-- Button -->
            <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button-right')" type="button" class="inline-flex items-center justify-center gap-2 text-zinc-800 bg-white border border-zinc-300 hover:bg-zinc-100 font-medium rounded-lg text-sm px-4 py-2 cursor-pointer focus:outline-none whitespace-nowrap disabled:cursor-default disabled:pointer-events-none disabled:opacity-75">
                <span>Bottom Right</span>
                <%= icon "chevron-down", stroke_width: 2, class: "size-4 -me-1" %>
            </button>
            <!-- Panel -->
            <div x-ref="panel" x-show="open" x-transition.origin.top.right x-on:click.outside="close($refs.button)" :id="$id('dropdown-button-right')" x-cloak class="absolute right-0 min-w-48 rounded-lg shadow-sm mt-2 z-10 origin-top-right bg-white p-1.5 outline-none border border-zinc-200 text-sm">
                <a href="#new" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    New Task
                </a>
                <a href="#edit" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    Edit Task
                </a>
                <a href="#delete" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-red-50 hover:text-red-600 focus-visible:bg-red-50 focus-visible:text-red-600 disabled:opacity-50 disabled:cursor-not-allowed">
                    Delete Task
                </a>
            </div>
        </div>

        <!-- Bottom Centered -->
        <div x-data="{
            open: false,
            toggle() {
            if (this.open) {
                return this.close()
            }
            this.$refs.button.focus()
            this.open = true
            },
            close(focusAfter) {
            if (! this.open) return
            this.open = false
            focusAfter && focusAfter.focus()
            }
        }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="! $refs.panel.contains($event.target) && close()" x-id="['dropdown-button-center']" class="relative">
            <!-- Button -->
            <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button-center')" type="button" class="inline-flex items-center justify-center gap-2 text-zinc-800 bg-white border border-zinc-300 hover:bg-zinc-100 font-medium rounded-lg text-sm px-4 py-2 cursor-pointer focus:outline-none whitespace-nowrap disabled:cursor-default disabled:pointer-events-none disabled:opacity-75">
                <span>Bottom Center</span>
                <%= icon "chevron-down", stroke_width: 2, class: "size-4 -me-1" %>
            </button>
            <!-- Panel -->
            <div x-ref="panel" x-show="open" x-transition.origin.top x-on:click.outside="close($refs.button)" :id="$id('dropdown-button-center')" x-cloak class="absolute left-1/2 min-w-48 -translate-x-1/2 rounded-lg shadow-sm mt-2 z-10 origin-top bg-white p-1.5 outline-none border border-zinc-200 text-sm">
                <a href="#new" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    New Task
                </a>
                <a href="#edit" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    Edit Task
                </a>
                <a href="#delete" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-red-50 hover:text-red-600 focus-visible:bg-red-50 focus-visible:text-red-600 disabled:opacity-50 disabled:cursor-not-allowed">
                    Delete Task
                </a>
            </div>
        </div>

        <div x-data="{
            open: false,
            toggle() {
                if (this.open) {
                    return this.close()
                }
                this.$refs.button.focus()
                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return
                this.open = false
                focusAfter && focusAfter.focus()
            }
        }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="! $refs.panel.contains($event.target) && close()" x-id="['dropdown-button']" class="relative">
            <!-- Button -->
            <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button-center')" type="button" class="inline-flex items-center justify-center gap-2 text-zinc-800 bg-white border border-zinc-300 hover:bg-zinc-100 font-medium rounded-lg text-sm px-4 py-2 cursor-pointer focus:outline-none whitespace-nowrap disabled:cursor-default disabled:pointer-events-none disabled:opacity-75">
                <span>Bottom Left</span>
                <%= icon "chevron-down", stroke_width: 2, class: "size-4 -me-1" %>
            </button>

            <!-- Panel -->
            <div x-ref="panel" x-show="open" x-transition.origin.top.left x-on:click.outside="close($refs.button)" :id="$id('dropdown-button')" x-cloak class="absolute left-0 min-w-48 rounded-lg shadow-sm mt-2 z-10 origin-top-left bg-white p-1.5 outline-none border border-zinc-200 text-sm">
                <a href="#new" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    New Task
                </a>

                <a href="#edit" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    Edit Task
                </a>

                <a href="#delete" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-red-50 hover:text-red-600 focus-visible:bg-red-50 focus-visible:text-red-600 disabled:opacity-50 disabled:cursor-not-allowed">
                    Delete Task
                </a>
            </div>
        </div>

    </div>
</div>

<!-- Drop Up Example -->
<div class="mt-16">
    <div class="flex justify-center gap-4">

        <div x-data="{
            open: false,
            placement: 'top',
            toggle() {
                if (this.open) {
                return this.close()
                }
                this.$refs.button.focus()
                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return
                this.open = false
                focusAfter && focusAfter.focus()
            }
            }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="! $refs.panel.contains($event.target) && close()" x-id="['dropdown-button-right-up']" class="relative">
            <!-- Button -->
            <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button-up')" type="button" class="inline-flex items-center justify-center gap-2 text-zinc-800 bg-white border border-zinc-300 hover:bg-zinc-100 font-medium rounded-lg text-sm px-4 py-2 cursor-pointer focus:outline-none whitespace-nowrap disabled:cursor-default disabled:pointer-events-none disabled:opacity-75">
                <span>Top Right</span>
                <%= icon "chevron-up", stroke_width: 2, class: "size-4 -me-1" %>
            </button>
            <!-- Panel -->
            <div x-ref="panel" x-show="open" x-transition.origin.bottom.right x-on:click.outside="close($refs.button)" :id="$id('dropdown-button-right-up')" x-cloak class="absolute right-0 bottom-full mb-2 min-w-48 rounded-lg shadow-sm z-10 origin-bottom-right bg-white p-1.5 outline-none border border-zinc-200 text-sm">
                <a href="#new" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    New Task
                </a>
                <a href="#edit" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    Edit Task
                </a>
                <a href="#delete" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-red-50 hover:text-red-600 focus-visible:bg-red-50 focus-visible:text-red-600 disabled:opacity-50 disabled:cursor-not-allowed">
                    Delete Task
                </a>
            </div>
        </div>

        <!-- Top Centered -->
        <div x-data="{
        open: false,
        toggle() {
          if (this.open) {
            return this.close()
          }
          this.$refs.button.focus()
          this.open = true
        },
        close(focusAfter) {
          if (! this.open) return
          this.open = false
          focusAfter && focusAfter.focus()
        }
      }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="! $refs.panel.contains($event.target) && close()" x-id="['dropdown-button-center-up']" class="relative">
            <!-- Button -->
            <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button-center-up')" type="button" class="inline-flex items-center justify-center gap-2 text-zinc-800 bg-white border border-zinc-300 hover:bg-zinc-100 font-medium rounded-lg text-sm px-4 py-2 cursor-pointer focus:outline-none whitespace-nowrap disabled:cursor-default disabled:pointer-events-none disabled:opacity-75">
                <span>Top Center</span>
                <%= icon "chevron-up", stroke_width: 2, class: "size-4 -me-1" %>
            </button>
            <!-- Panel -->
            <div x-ref="panel" x-show="open" x-transition.origin.bottom x-on:click.outside="close($refs.button)" :id="$id('dropdown-button-center-up')" x-cloak class="absolute left-1/2 bottom-full mb-2 min-w-48 -translate-x-1/2 rounded-lg shadow-sm z-10 origin-bottom bg-white p-1.5 outline-none border border-zinc-200 text-sm">
                <a href="#new" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    New Task
                </a>
                <a href="#edit" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    Edit Task
                </a>
                <a href="#delete" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-red-50 hover:text-red-600 focus-visible:bg-red-50 focus-visible:text-red-600 disabled:opacity-50 disabled:cursor-not-allowed">
                    Delete Task
                </a>
            </div>
        </div>

        <div x-data="{
            open: false,
            placement: 'top',
            toggle() {
                if (this.open) {
                return this.close()
                }
                this.$refs.button.focus()
                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return
                this.open = false
                focusAfter && focusAfter.focus()
            }
            }" x-on:keydown.escape.prevent.stop="close($refs.button)" x-on:focusin.window="! $refs.panel.contains($event.target) && close()" x-id="['dropdown-button-left-up']" class="relative">
            <!-- Button -->
            <button x-ref="button" x-on:click="toggle()" :aria-expanded="open" :aria-controls="$id('dropdown-button-left-up')" type="button" class="inline-flex items-center justify-center gap-2 text-zinc-800 bg-white border border-zinc-300 hover:bg-zinc-100 font-medium rounded-lg text-sm px-4 py-2 cursor-pointer focus:outline-none whitespace-nowrap disabled:cursor-default disabled:pointer-events-none disabled:opacity-75">
                <span>Top Centered</span>
                <%= icon "chevron-up", stroke_width: 2, class: "size-4 -me-1" %>
            </button>
            <!-- Panel -->
            <div x-ref="panel" x-show="open" x-transition.origin.bottom.left x-on:click.outside="close($refs.button)" :id="$id('dropdown-button-up')" x-cloak class="absolute left-0 bottom-full mb-2 min-w-48 rounded-lg shadow-sm z-10 origin-bottom-left bg-white p-1.5 outline-none border border-zinc-200 text-sm">
                <a href="#new" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    New Task
                </a>
                <a href="#edit" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-zinc-50 focus-visible:bg-zinc-50 disabled:opacity-50 disabled:cursor-not-allowed">
                    Edit Task
                </a>
                <a href="#delete" class="px-2 lg:py-1.5 py-2 w-full flex items-center rounded-md transition-colors text-left text-zinc-800 hover:bg-red-50 hover:text-red-600 focus-visible:bg-red-50 focus-visible:text-red-600 disabled:opacity-50 disabled:cursor-not-allowed">
                    Delete Task
                </a>
            </div>
        </div>

    </div>
</div>